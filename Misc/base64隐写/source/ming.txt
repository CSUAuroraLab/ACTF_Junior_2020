#include<iostream>
#include<string>
#include<cstring>
#include<cstdio>
#define maxn 999

using namespace std;

char ca[maxn], cb[maxn];

int cmp(string a, string b)
{
    if(a.size() > b.size())
        return 1;
    else if(a.size() < b.size())
        return -1;
    else
    {
        for(int i = 0; i < a.size(); i++)
        {
            if(a[i] < b[i])
                return -1;
            if(a[i] > b[i])
                return 1;
        }
        return 0;
    }
}

void reseta(string a)
{
    memset(ca,0,sizeof(ca));
    for(int i = 0; i < a.size(); i++)
    {
        ca[i] = a[a.size()-1-i] - '0';
    }
}

void resetb(string b)
{
    memset(cb,0,sizeof(cb));
    for(int i = 0; i < b.size(); i++)
    {
        cb[i] = b[b.size()-1-i] - '0';
        //printf("%d",cb[i]);
    }
}

string add(string a, string b)//加法
{
    reseta(a);//把每一位存的字符变成数字,并且把数组反过来便于后面不同位数相加
    resetb(b);
    for(int i = 0; i < maxn; i++)
    {
        ca[i] = ca[i] + cb[i];
        if(ca[i] >= 2){
            ca[i+1] += 1;
            ca[i] -= 2;
        }
    }
    bool flag = true;
    string c = "";
    for(int i = maxn - 1; i >= 0; i--)
    {
        if(flag && ca[i] == 0)
            continue;
        if(ca[i] != 0)
            flag = false;
        c += (ca[i] + '0');
        //printf("%d",ca[i]);
    }
    if(flag)
        return "0";
    else
        return c;
}

string minu(string a, string b)//减法
{
    int sign = 0;
    if(cmp(a, b) == -1)//a中应该存较大的那个数
    {
        sign = 1;
        string temp = a;
        a = b;
        b = temp;
    }
    reseta(a);
    resetb(b);
    for(int i = 0; i < maxn; i++)
    {
        if(ca[i] < cb[i]){
            ca[i+1] -= 1;
            ca[i] += 2;
        }
        ca[i] = ca[i] - cb[i];
    }
    bool flag = true;
    string d = "";
    for(int i = maxn - 1; i >= 0; i--)
    {
        if(flag && ca[i] == 0)
            continue;
        if(ca[i] != 0)
            flag = false;
        d += (ca[i] + '0');
        //printf("%d",ca[i]);
    }
    if(flag)
        return "0";
    else
        return d;
}

string mul(string x, string y)//s为符号位
{
    int lenx = x.size();
    int leny = y.size();
    if(lenx == 1)
    {
        //cout<<x<<"   "<<y<<endl;
        if(x == "1" && y == "1")
            return "1";
        else
            return "0" ;
    }

    //printf("%d--%d\n",lenx,leny);

    string a, b, c,d;
    a = x.substr(0, lenx/2);
    b = x.substr(lenx/2, lenx/2);
    c = y.substr(0, leny/2);
    d = y.substr(leny/2, leny/2);
    printf("%d--%d--%d--%d--------------------------------------------%d-%d\n",a.size(), b.size(), c.size(), d.size(), x.size(), y.size());
    //cout<<x<<":"<<a<<" "<<b<<" "<<c<<" "<<d<<endl;
    string ac = mul(a, c);
    string bd = mul(b, d);
    //cout<<x<<":"<<ac<<" "<<bd<<endl;

    string ab = minu(a, b);//a-b
    string cd = minu(d, c);
    //cout<<x<<":"<<ab<<" "<<cd<<endl;

    string abcd = mul(ab, cd);
    //cout<<x<<":"<<abcd<<endl;

    string first = ac;
    for(int i = 0; i < (lenx); i++)
        first += "0";
    //cout<<ac<<" -----ac---- "<<first<<endl;

    string second = add(abcd, ac);
    second = add(second, bd);
    for(int i = 0; i < (lenx/2); i++)
        second += "0";

    string fin = add(first, second);
    return add(fin, bd);

}

int main(void)
{
    string x, y;
    printf("请输入两个二进制数字: ");
    cin>>x>>y;
    string ans = mul(x, y);
    cout<<ans;
}
